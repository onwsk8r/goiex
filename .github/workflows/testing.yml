name: Testing

on:
  push:
    branches: [master]
  pull_request:

jobs:
  cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.14", "1.15"]
    name: Build Cache (go v${{ matrix.go }})
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-
      - run: go mod download
        if: steps.cache-deps.outputs.cache-hit != 'true'
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.14", "1.15"]
    name: Run Unit Tests (go v${{ matrix.go }})
    needs: cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('go.sum') }}
      - run: go install github.com/onsi/ginkgo/ginkgo
      - run: ginkgo -r --randomizeAllSpecs --randomizeSuites --failOnPending --trace --race --progress --compilers=2 --nodes=1
  integration-test:
    runs-on: ubuntu-latest
    name: Run Integration Tests (go v1.15)
    needs: cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.15-${{ hashFiles('go.sum') }}
      - run: go install github.com/onsi/ginkgo/ginkgo
      - run: ginkgo --randomizeAllSpecs --randomizeSuites --failOnPending --trace --race --progress --compilers=2 --nodes=1 -tags "integration" pkg/rest
        env:
          IEXCLOUD_TOKEN: ${{ secrets.IEXCLOUD_TOKEN }}
  tag:
    runs-on: ubuntu-latest
    needs: [unit-test, integration-test]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - uses: mathieudutour/github-tag-action@v5.6
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # ['major', 'premajor', 'minor', 'preminor', 'patch', 'prepatch', 'prerelease']
          custom_release_rules: FIX:patch,FEAT:minor,BREAK:major
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
